class SkipError extends Error{constructor(t){super(t),this.name="SkipError"}}function urlTest(t){"string"!=typeof t&&(t=urlInput.value);let e=t.match(/^(?:https:\/\/|)(?:http:\/\/|)(?:www\.bbc\.co.uk\/)(?:sounds\/play\/|programmes\/)(.{8})(?:\?.*|)$/);return null==e?(urlInput.className="invalid",urlSubmit.className="invalid",urlSubmit.disabled=!0):(urlInput.className="valid",urlSubmit.className="valid",urlSubmit.disabled=!1,urlSubmit.innerHTML="Go!",e=e[1]),e}function printToOutput(t){outputBox.value+=t+"\n",outputBox.scrollTop=outputBox.scrollHeight}function getHashParams(){let t,e={},o=/([^&;=]+)=?([^&;]*)/g,r=window.location.hash.substring(1);for(;t=o.exec(r);)e[t[1]]=decodeURIComponent(t[2]);return e}function generateRandomString(t){let e="",o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let r=0;r<t;r++)e+=o.charAt(Math.floor(Math.random()*o.length));return e}function getSpotifyAuth(){let t=generateRandomString(16);localStorage.setItem(stateKey,t);let e="https://accounts.spotify.com/authorize";e+="?response_type=token",e+="&client_id="+encodeURIComponent("d40f63276ab440b68c98f06f10728393"),e+="&scope="+encodeURIComponent("playlist-modify-private"),e+="&redirect_uri="+encodeURIComponent("https://spotilist.cooper-davis.net"),e+="&state="+encodeURIComponent(t),localStorage.setItem("inputText",urlInput.value),localStorage.setItem("titleText",titleInput.value),localStorage.setItem("descriptionText",descriptionInput.value),localStorage.setItem("details",details.open),window.location=e}window.addEventListener("unhandledrejection",(function(t){console.log(t.promise),alert(t.reason)}));let urlInput=document.getElementById("urlInput"),urlSubmit=document.getElementById("urlSubmit"),outputBox=document.getElementById("outputBox"),titleInput=document.getElementById("playlistTitleInput"),descriptionInput=document.getElementById("playlistDescriptionInput"),details=document.getElementById("details");urlInput.addEventListener("input",urlTest,!1),urlSubmit.addEventListener("click",getSpotifyAuth,!1);let stateKey="spotify_auth_state",params=getHashParams(),access_token=params.access_token,state=params.state,storedState=localStorage.getItem(stateKey);urlInput.value=localStorage.getItem("inputText"),titleInput.value=localStorage.getItem("titleText"),descriptionInput.value=localStorage.getItem("descriptionText"),details.open="true"==localStorage.getItem("details"),localStorage.removeItem("inputText"),localStorage.removeItem("titleText"),localStorage.removeItem("descriptionText"),localStorage.removeItem("details"),!access_token||null!=state&&state===storedState?(localStorage.removeItem(stateKey),access_token&&(urlSubmit.innerHTML="Wait...",fetch("https://api.spotify.com/v1/me",{headers:{Authorization:"Bearer "+access_token}}).then((t=>t.json())).catch((t=>{throw console.log(t),printToOutput("[ERROR] Spotify authentication failed."),new SkipError})).then((t=>{let e=t.id;printToOutput("[OK] Authenticated as Spotify User: "+t.display_name);let o=urlTest(urlInput.value);return Promise.all([{user_id:e},fetch(`https://cors.cooper-davis.net/raw?url=${o}`).then((t=>t.text()))])})).catch((t=>{throw"SkipError"!=t.name&&(console.log(t),printToOutput("[ERROR] Cannot find that BBC Sounds Episode.")),new SkipError})).then((([t,e])=>{try{let n=new DOMParser;e=n.parseFromString(e,"text/html"),Array.from(e.getElementsByTagName("script")).forEach((t=>{t.innerHTML.startsWith(" window.__PRELOADED_STATE__")&&(e=JSON.parse(t.innerHTML.trim().slice(29,-1)))}));var o=titleInput.value||Object.values(e.programmes.current.titles).slice(0,2).join(" - "),r=descriptionInput.value||"Automatically generated by Spotilist.";printToOutput("[OK] Found episode: "+o);let i=e.tracklist.tracks;if(null==i)throw printToOutput("[ERROR] Cannot find any associated tracks."),new SkipError;printToOutput("[OK] Found associated tracks: "+i.length);let a=i.filter((t=>Object.values(t.uris).some((t=>"Spotify"==t.label))));if(null==a)throw printToOutput("[ERROR] Cannot find any tracks."),new SkipError;if(t.track_uris=a.map((t=>"spotify:track:"+t.uris.filter((t=>"Spotify"==t.label))[0].uri.split("/")[4])).flat(),t.track_uris.length<1)throw printToOutput("[ERROR] Cannot find any tracks on Spotify."),new SkipError;printToOutput("[OK] Found tracks on Spotify: "+t.track_uris.length)}catch(t){throw console.log(t),printToOutput("[ERROR] Failed to parse Episode source!"),new SkipError}return Promise.all([t,fetch("https://api.spotify.com/v1/users/"+t.user_id+"/playlists",{method:"POST",headers:{Authorization:"Bearer "+access_token,"Content-Type":"application/json"},body:JSON.stringify({name:o,public:!1,description:r})}).then((t=>t.json()))])})).catch((t=>{throw"SkipError"!=t.name&&(console.log(t),printToOutput("[ERROR] Failed to create Spotify playlist")),new SkipError})).then((([t,e])=>{t.playlist_url=e.external_urls.spotify;let o=e.id;return printToOutput("[OK] Created new empty playlist: "+t.playlist_url),Promise.all([t,fetch("https://api.spotify.com/v1/playlists/"+o+"/tracks",{method:"POST",headers:{Authorization:"Bearer "+access_token,"Content-Type":"application/json"},body:JSON.stringify({uris:t.track_uris})})])})).catch((t=>{throw"SkipError"!=t.name&&(console.log(t),printToOutput("[ERROR] Failed to add tracks to playlist!")),new SkipError})).then((([t])=>{printToOutput("[OK] Added tracks to playlist"),urlSubmit.innerHTML="Go!",window.location=t.playlist_url,printToOutput("[OK] Opening new playlist...")})).catch((t=>{console.log(t),printToOutput("[ERROR] Something went wrong! Check the console for details.")})))):(printToOutput("[ERROR] Failed Spotify authentication - please try again."),details.open=!0,urlSubmit.innerHTML="Error!");