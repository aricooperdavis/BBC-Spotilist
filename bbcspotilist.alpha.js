var urlInput = document.getElementById('urlInput');
var urlSubmit = document.getElementById('urlSubmit');
var outputBox = document.getElementById('outputBox');

// ----------------- Helper Functions --------------------------

function urlParse(e) {
	/* Parse url in input box */
	console.log(e);
};

// ----------------- Copied Functions --------------------------

function getHashParams() {
	/* Parse hash in returned uri address */
  var hashParams = {};
  var e, r = /([^&;=]+)=?([^&;]*)/g,
      q = window.location.hash.substring(1);
  while ( e = r.exec(q)) {
     hashParams[e[1]] = decodeURIComponent(e[2]);
  }
  return hashParams;
}

function generateRandomString(length) {
	/* Generate a random string to use as a state key */
  var text = '';
  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';

  for (var i = 0; i < length; i++) {
    text += possible.charAt(Math.floor(Math.random() * possible.length));
  }
  return text;
};

/* Set-up authentication states for spotify request */
var stateKey = 'spotify_auth_state';
var outputLog = null;
var params = getHashParams();
var inputText = null;

var access_token = params.access_token,
    state = params.state,
    storedState = localStorage.getItem(stateKey);
		urlInput.value = localStorage.getItem(inputText)

function startProcess() {

	/* Authenticate with Spotify */

  var client_id = 'd40f63276ab440b68c98f06f10728393'; // Your client id
  var redirect_uri = 'http://localhost:8000'; // Your redirect uri

  var state = generateRandomString(16);

  localStorage.setItem(stateKey, state);
  var scope = 'playlist-modify-private';

  var url = 'https://accounts.spotify.com/authorize';
  url += '?response_type=token';
  url += '&client_id=' + encodeURIComponent(client_id);
  url += '&scope=' + encodeURIComponent(scope);
  url += '&redirect_uri=' + encodeURIComponent(redirect_uri);
  url += '&state=' + encodeURIComponent(state);

	// Backup text box data
	localStorage.setItem(inputText, urlInput.value);

  window.location = url;
};

/* If an access token has been given then we must have attempted authentication */
if (access_token && (state == null || state !== storedState)) {
  outputBox.value += "[ERROR] Failed Spotify authentication - please try again.\n";
} else {
  localStorage.removeItem(stateKey);
	localStorage.removeItem(inputText);
  if (access_token) {
		/* Make a call to the `me` endpoint to get logged in user details */
    $.ajax({
      url: 'https://api.spotify.com/v1/me',
      headers: {
        'Authorization': 'Bearer ' + access_token
      },
      success: function(response) {
				var user_id = response['id'];
        outputBox.value += "[OK] Authenticated as Spotify User: "+response['display_name']+".\n";

				/* Parse episode source from BBC Sounds */
				$.ajax({
					url: "https://cors-anywhere.herokuapp.com/"+urlInput.value,
					success: function(response1) {
						/* Extract spotify uris*/
						var regex = /<title>.*<\/title>/g;
						var title = response1.match(regex)[0].slice(7, -8);
						outputBox.value += "[OK] Found episode: "+title+"\n";
						var regex = /<span class="sc-c-basic-tile__track-number gs-u-display-inline-block gel-pica-bold gs-u-ml0@m">/g
						var track_count = response1.match(regex).length;
						outputBox.value += "[OK] Found associated tracks: "+track_count+"\n";
						var regex = /[^"]*(open.spotify.com)[^"]*/g;
						var links = response1.match(regex);
						var track_uris = [];
						for (var i in links) {
							track_uris.push("spotify:track:"+links[i].split("/")[4]);
						};
						outputBox.value += "[OK] Found tracks on Spotify: "+track_uris.length+"\n";

						/* Create a playlist to put the tracks in */
						$.ajax({
							url: "https://api.spotify.com/v1/users/"+user_id+"/playlists",
							type: "POST",
							headers: {
								'Authorization': 'Bearer '+access_token,
								'Content-Type': 'application/json'
							},
							data: JSON.stringify({
								'name': title,
								'public': false,
								'description': 'Playlist automatically generated by BBC Spotilist.'
							}),
							success: function(response2) {
								var playlist_url = response2['external_urls']['spotify'];
								var playlist_id = response2['id'];
								outputBox.value += "[OK] Created new empty playlist: "+playlist_url+"\n";

								/* Populate playlist with tracks */
								$.ajax({
									url: "https://api.spotify.com/v1/playlists/"+playlist_id+"/tracks",
									type: "POST",
									headers: {
										'Authorization': 'Bearer '+access_token,
										'Content-Type': 'application/json'
									},
									data: JSON.stringify({
										uris: track_uris
									}),
									success: function(response3) {
										outputBox.value += "[OK] Added tracks to playlist.\n";
										window.open(playlist_url);
										outputBox.value += "[OK] Opening new playlist..."
									},
									error: function(response3){
										outputBox.value += "[ERROR] Failed to add tracks to playlist.\n";
										console.log(response3);
									}
								});

							},
							error: function(response2) {
								console.log(response2);
								outputBox.value += "[ERROR] Failed to create Spotify playlist.\n";
							}

						});
					},
					error: function(response1) {
						console.log(response1);
						outputBox.value += "[ERROR] Cannot find that BBC Sounds Episode.\n";
					}
				});

      }
    });

  }
}

	urlInput.addEventListener("change", urlParse, false);
	urlSubmit.addEventListener("click", startProcess, false);
